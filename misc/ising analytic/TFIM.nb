(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    102698,       2252]
NotebookOptionsPosition[    100235,       2203]
NotebookOutlinePosition[    100629,       2219]
CellTagsIndexPosition[    100586,       2216]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"L", "=", "4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ks", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      FractionBox[
       RowBox[{"2", "*", "n", "*", "Pi"}], "L"], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", 
        RowBox[{
         RowBox[{"-", "L"}], "/", "2"}], ",", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"L", "/", "2"}], "-", "1"}], ")"}]}], "}"}]}], "]"}]}], ";", 
   RowBox[{"an", " ", "=", " ", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"Total", "[", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"k", "=", 
            RowBox[{"ks", "[", 
             RowBox[{"[", "l", "]"}], "]"}]}], ";", 
           RowBox[{"Sqrt", "[", 
            RowBox[{
             SuperscriptBox["g", "2"], "+", 
             SuperscriptBox[
              RowBox[{"(", "J", ")"}], "2"], "+", 
             RowBox[{"(", 
              RowBox[{"2", "*", "J", "*", "g", "*", 
               RowBox[{"Cos", "[", "k", "]"}]}], ")"}]}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"l", ",", "1", ",", 
            RowBox[{"Length", "[", "ks", "]"}]}], "}"}]}], "]"}], "]"}]}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"J", ",", "0", ",", "10", ",", ".01"}], "}"}]}], "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"op", "[", 
     RowBox[{"n_Integer", ",", "k_Integer", ",", 
      RowBox[{"a_", "?", "MatrixQ"}]}], "]"}], "/;", 
    RowBox[{
     RowBox[{"1", "\[LessEqual]", "k", "\[LessEqual]", "n"}], "&&", 
     RowBox[{
      RowBox[{"Dimensions", "[", "a", "]"}], "\[Equal]", 
      RowBox[{"{", 
       RowBox[{"2", ",", "2"}], "}"}]}]}]}], ":=", 
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{
     RowBox[{"IdentityMatrix", "[", 
      RowBox[{
       RowBox[{"2", "^", 
        RowBox[{"(", 
         RowBox[{"k", "-", "1"}], ")"}]}], ",", "SparseArray"}], "]"}], ",", 
     "a", ",", 
     RowBox[{"IdentityMatrix", "[", 
      RowBox[{
       RowBox[{"2", "^", 
        RowBox[{"(", 
         RowBox[{"n", "-", "k"}], ")"}]}], ",", "SparseArray"}], "]"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"sz", "[", 
     RowBox[{"n_Integer", ",", "k_Integer"}], "]"}], "/;", 
    RowBox[{"1", "\[LessEqual]", "k", "\[LessEqual]", "n"}]}], ":=", 
   RowBox[{"op", "[", 
    RowBox[{"n", ",", "k", ",", 
     RowBox[{"PauliMatrix", "[", "3", "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"sx", "[", 
     RowBox[{"n_Integer", ",", "k_Integer"}], "]"}], "/;", 
    RowBox[{"1", "\[LessEqual]", "k", "\[LessEqual]", "n"}]}], ":=", 
   RowBox[{"op", "[", 
    RowBox[{"n", ",", "k", ",", 
     RowBox[{"PauliMatrix", "[", "1", "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"HH", "[", 
    RowBox[{
     RowBox[{"n_Integer", "/;", 
      RowBox[{"n", "\[GreaterEqual]", "3"}]}], ",", "g_", ",", "J_"}], "]"}], 
   ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "g"}], "*", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{"sz", "[", 
        RowBox[{"n", ",", "k"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "n"}], "}"}]}], "]"}]}], "-", 
    RowBox[{"J", "*", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"sx", "[", 
         RowBox[{"n", ",", "k"}], "]"}], ".", 
        RowBox[{"sx", "[", 
         RowBox[{"n", ",", 
          RowBox[{"Mod", "[", 
           RowBox[{
            RowBox[{"k", "+", "1"}], ",", "n", ",", "1"}], "]"}]}], "]"}]}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "n"}], "}"}]}], "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"num", " ", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"kk", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"HH", "[", 
          RowBox[{"4", ",", "g", ",", "J"}], "]"}], "//", "Eigenvalues"}], "//",
         "Min"}]}], ";", "kk"}], ",", 
     RowBox[{"{", 
      RowBox[{"J", ",", "0", ",", "10", ",", ".01"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"p4", "=", 
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{"an", "/", "num"}], ",", " ", 
    RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], 
  "\[IndentingNewLine]"}]}], "Input",
 CellChangeTimes->{{3.811608245704956*^9, 3.8116082965673122`*^9}, {
   3.811608377295189*^9, 3.811608397807548*^9}, {3.811608706694406*^9, 
   3.811608730628108*^9}, {3.8116087786900387`*^9, 3.811608809815954*^9}, {
   3.811615821323762*^9, 3.811615833819818*^9}, {3.8116158775734777`*^9, 
   3.811616030472047*^9}, {3.8116165996277122`*^9, 3.811616599692019*^9}, {
   3.8116174853598347`*^9, 3.811617486392762*^9}, {3.811620067293067*^9, 
   3.8116200705166817`*^9}, {3.811620146555677*^9, 3.811620147321596*^9}, 
   3.811621631321233*^9, {3.811621698704288*^9, 3.811621700435109*^9}, {
   3.811621734765642*^9, 3.8116217381895103`*^9}, 3.8116222272703733`*^9, {
   3.811622259161235*^9, 3.811622260043784*^9}, {3.811622290683792*^9, 
   3.811622313841337*^9}, {3.811622780100958*^9, 3.8116227875380383`*^9}, {
   3.8116255490633087`*^9, 3.8116255704431553`*^9}, {3.811625628592483*^9, 
   3.811625628875553*^9}, {3.811625887777157*^9, 3.811625887924055*^9}},
 CellLabel->
  "In[597]:=",ExpressionUUID->"cd3ecb8c-34e8-4682-8f60-310d34862c01"],

Cell[BoxData[
 GraphicsBox[{{}, {
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.004583333333333334], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
w/nttrr2Fh87XOmBd4pn4pyKDqt5omrjvs99nnaY5dl+ffFxnvf9DsMTAf/W
Fuff6jDbE00WLpe1rlF/TxTPnbfa/gL194Ryf/XtPSepvyea67vYPTtM/T1R
cK7RtE869fdCzrqS9Lkp1N8LixVTS70Tqb8XnAb9yDGldbYXvlXVnPyURv29
oO3yTTeWHj/dC6JVGvptJ6i/F94buLa6n6f+Xujh5/PnfB7134Kn/mmW3wup
/xb0U981UruE+m+BE6/l3qBH1H8LdnWSxfV6Qf23YPaJ1tjqSuq/BYsX6aid
qKL+W6DxIQqOtdR/C05Vvo3+TXmpeSOg9vHPcMqT5Q0LdunbKnXK3xuuGeP5
0KT8vdHn1XAtYR96/Xlj4v3c26f70+vPG60ljz+VDKbXnzfu/h6W/ZB5/Xnj
7bYeiwsN6PXng4G777dmTKDXnw9uBTv38JlK/X3w+01w1kgz6u+DiU0B3W7R
/w88H7yMDvG1W0D9fZBjvEz7sRX198FRT/+xc1dQfx98LVavT7al/r5gG5Rk
vran/r5IEc0M1tlE/X2RZbt+/3RX6u+LN+ce2lt5Un9fSDp/fWHlS/198coz
bqNZIPX3BW9/774Dw6i/Lw4/2z7lYyT190PL9VP1mTzq74fY09slNiLq7wfO
u5/jaunvFdsP4W/0e0Ypqb8fNvV87/g3ifr7gTX3gJ1XMvX3w1HJIqPivdTf
D809LLoMTqf+/lheEz3cIYv6++Ooc3z21mzq74/tdfYPzh6j/v6I/e/fZ54/
/hi03Hh8lvr7Y9W9zd9Kc6m/PzbG3gnJu0L9/eF1IE+2L5/6c/D96hpHTmGH
tTlQm2WoN72Ing8Hj2etqKm922FjDiqkbv/20PsNOFiaFM+b+ajDNhykeK3e
f+8pPV8OLOur+GtedJjDwabONWtLK+j5c1BwJNxyDr3fJXIg80BYxgeah4Po
ne4Dm+j9UcVBU0HK8oVfaD4OTEZ1mx9f2+EyDt73cx965QfNy8G7XbUaVT87
XMeBTsOm4d3o/VktAHqLmncMbab5A/B9slJqSO/nrAB04XuNMVLveL83DkBg
vbt0GL3/IwDjP1VX9OjWYZsAZE16ueAbc70QgL2vz7y52avDnACMGBb8eIcW
XT8EYE+3I5Yb+nU4MQBpEp/VugPoeiYAvVe6Dy8e2GFVAC7mlJQEDqbrmwCI
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
HgSPbmTyF0NznxO/lclfjIVPlzzuTOfNy8WQz1mk35Nc2f7zfh4OfcnV7f0e
X9s2kFwnxqGLznn65EYxnlk4vRnFnF+X4Of6O3/GkjUlMP7v+XZtCeZEGfea
TtaT4NSZFZqzySwJvD+xmueRjST4siL3w2KysQQ7OxncXE42k8CxPiLVlgwJ
0j/f3rKebCVB43Z9YyeyjQSLguRf3cj2Eoz+PDp9C5ktwdIZf5ZyyJ4SqEJ1
voWQORLoZUriI8lcCZZs8xrIZ87zS2D793paPFksQffAg8Pl5MT234cPK3kb
OUWCvFkLuiaT0yXw0NH3TSVnt/9+uuTdzSCrJNjQZerIw+RcCVI/SjnHyPkS
iDY8PX+KXCTBkKaRv86TyyRomhE7/gqTf/vz8W9aX8DkL0FleRrvFpO/BDbb
eGl3mfwlWJd85HwZk78EPiVGt54w+Uux9FfP+y+Y/KUousi+/4bJXwrPgya3
PzD5SyEy3Jlbw+QvhXj71sxaJn8pZo+YImpg8pei9Ws8u5HJXwr1xn0m/5j8
pbhuFKfeib5/YSVF2dIFt7uSbaTYofVF1JNsL4VZnwQLbTJbioobo2r7kz2l
mLrjXvIgMkcKk+LEmcPIXCmqt4c/Hcl830OKAb12eBuSxVLUGH9tGk9OlKJn
jYJvTE6R4monUSdTcnr7vCYVUcz3R7KleDEks86CrJJiJt44zifnSnFAO71w
ETlfiiEfv4+2JhdJoWx9HrOSXCbF2ASvh7bkcim2Jh0Zbk+ulKJU/6C7A7m6
/flreRxmk+ukuGf+960buVGKvXZeul7M919keNbzmqUvWVOG1JouvgFkbRku
bbHaGkLWk8HwV2JOOJklw8nnNQXRZCMZXqxxfMgnG8vgoPz1SkQ2k+H87itv
JWTI4BV6pVLB5C9DpVbb821M/jKUWCjv7WTyl2F5YdDl3Uz+MvRfc/HAPiZ/
GZKlnvEZTP4yWNRLXQ8y+cvg22ncrCNM/jI0DF/Z+ziTvwxvUjVeqJj8ZfiT
a5NxlslfhnMZc11zmfxliAx8PvwKk78Md00Mn11j8pfBqnKK5AaTvwy1GzpN
v83kLwM3PKPiDpO/DH3aBvLuM/nLULTPT/8hk78MD38fP/eEyV+GtXteWz1n
8m9//t26P3vF5C+D7QlTdiWTvwyjvvp8eM/kL0eq1gXXKiZ/OS7YDX39mclf
jq3fs2xrmfzlMG+0L/zB5C/HpFgY/2Lyl8MyzjW5kclfjhcNxU3NTP5yNKki
17Ux+cuxWcZTdaLva1nJ8duysnNXso0cwYmZa7qT7eV407c0rReZLYdok+8n
LbKnHBb/hEY6ZI4cZu767sz3wbhyxGjMSRvEfF9Mjhbj2kdDyeL2+WabdmaR
E+UYvXmw8ShyihxHK7LWGZDT5fhZ/DJiLDlbjqu4tXsCWSWHvrX32cnkXDne
fXhwZyo5X47oFrUKU3KRHGuD2j6bkcvkuKb/+OcscrkcY2+I/s4hV8oxbNiQ
lnnkajnkr/Y0WZLr5EhJ69mwmNwox/iWoOqlzPfjFNgR8eL5crKmAl92Lbxt
Q9ZWYGTBZZUtWU8BdccFu+zILAU2XH8Xtp5spMAYi/S1DmRjBeJ7CyY7kc0U
6OSp7OJChgLBIXefuTH5KzDPdu4hDyZ/BVx16jhbmPzbn++V9zN8mfwVWLKU
1ezP5K/A3WM5lwKZ/BXYVSwLDWHyV6Aq4tYkLpO/AoGJzu8jmPwVeHrfZUc0
k78Ca+tK5/GY/BXgZJ34ImDyV2BaYuckEZO/AqYrnpmImfwVqPOb8FjK5K+A
G7c7R8Hkr0DUpyDNRCZ/BfTGB+xLYvJXoPeJrpN3Mvkr4H7PPC+ZyV8Bywot
qz1M/gq0GCpLU5n8FXCuvWibxuSvQLRHyuMMJn8luhZMWp3F5K/EoOGCkkNM
/kocSU1ecITJX4kJ1sEXcpj8lWiaqm90gslfiY22yTtVTP5KBGVWtZ1m8lfC
sbeOxzkmfyVCuMPuXmDyV6LbtT4TLjH5K/H4TLXkCpO/EoWsUx+uMvkrMea2
z+wCJn8lLjuxtt1g8lfi2p6ydzeZ/JUYzhJMKWLyV2LWVvPoO0z+SqyKbb5Z
wuSvhE1sSc9SJn8l+umeWvGAyV+JudePKx8x+Ssh/3vr7hMmfyXSJ6p3LWfy
V8LpOtviBZO/EhcHfg54xeSvxCdhxoHXTP5KWK+XPaxk8lfi/quc1ndM/kok
rexm9JHJXwmHzxkrqpj82/06NrCGyV+JNWsPbv/C5L8VBQG6p78x+W/F5RXP
7n1n8t+KkWpfP/1g8t8KVZL9vwYm/63423NE399M/lsRtmXJyEYm/63IPPjE
+C+T/1ZonSie3cLkvxVzfccuamXy34rWju///h+0AC0L
      "]]}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.004583333333333334],
       AbsoluteThickness[1.6]}, {}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.004583333333333334],
       AbsoluteThickness[1.6]}, {}}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.919650617650803},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1001.}, {0.919650617650803, 1.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8116223117651577`*^9, 3.8116223154461803`*^9}, 
   3.811622784591243*^9, {3.811625560123891*^9, 3.81162557127789*^9}, 
   3.811625629645062*^9},
 CellLabel->
  "Out[605]=",ExpressionUUID->"86287e5d-1b97-4947-88ec-d561ef7c6027"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"L", "=", "4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"g", ",", "J"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", "11"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ks", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     FractionBox[
      RowBox[{"2", "*", "n", "*", "Pi"}], "L"], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", 
       RowBox[{
        RowBox[{"-", "L"}], "/", "2"}], ",", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"L", "/", "2"}], "-", "1"}], ")"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Eg", "=", 
  RowBox[{
   RowBox[{"Total", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"k", "=", 
        RowBox[{"ks", "[", 
         RowBox[{"[", "l", "]"}], "]"}]}], ";", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"g", "\[Equal]", "J"}], " ", "&&", " ", 
          RowBox[{"k", "\[Equal]", 
           RowBox[{
            RowBox[{"-", "L"}], "/", "2"}]}]}], ",", "0", ",", 
         RowBox[{"-", 
          RowBox[{"Sqrt", "[", 
           RowBox[{
            SuperscriptBox["g", "2"], "+", 
            SuperscriptBox[
             RowBox[{"(", "J", ")"}], "2"], "+", 
            RowBox[{"(", 
             RowBox[{"2", "*", "J", "*", "g", "*", 
              RowBox[{"Cos", "[", "k", "]"}]}], ")"}]}], "]"}]}]}], "]"}]}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"l", ",", "1", ",", 
        RowBox[{"Length", "[", "ks", "]"}]}], "}"}]}], "]"}], "]"}], "//", 
   "N"}]}]}], "Input",
 CellChangeTimes->{{3.811622432967228*^9, 3.811622461903023*^9}, {
  3.8116225096488237`*^9, 3.811622589186092*^9}, {3.811622619780682*^9, 
  3.811622620267962*^9}, {3.811622760361472*^9, 3.8116227606820383`*^9}, {
  3.81162342241366*^9, 3.811623423062602*^9}, {3.8116235306137047`*^9, 
  3.811623579275557*^9}},
 CellLabel->
  "In[373]:=",ExpressionUUID->"67a560c8-d666-4a06-b979-47c98d497a40"],

Cell[BoxData[
 RowBox[{"-", "44.09072203437452`"}]], "Output",
 CellChangeTimes->{{3.811622574562348*^9, 3.811622589961529*^9}, 
   3.8116226205929413`*^9, 3.8116227609331417`*^9, 3.811622796195177*^9, {
   3.81162356470364*^9, 3.81162357966752*^9}},
 CellLabel->
  "Out[376]=",ExpressionUUID->"19f25807-da7e-4a70-adb4-0a27b10ea89c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Min", "[", 
   RowBox[{
    RowBox[{"HH", "[", 
     RowBox[{"4", ",", "g", ",", "J"}], "]"}], "//", "Eigenvalues"}], "]"}], "//",
   "N"}]], "Input",
 CellChangeTimes->{{3.811622641690764*^9, 3.8116226567667522`*^9}, {
  3.811622728187936*^9, 3.81162275533099*^9}},
 CellLabel->
  "In[377]:=",ExpressionUUID->"e3d60997-637b-4ec6-9cb6-6c3a1917d6a5"],

Cell[BoxData[
 RowBox[{"-", "44.09119024574847`"}]], "Output",
 CellChangeTimes->{
  3.811622657233377*^9, {3.811622730476462*^9, 3.811622755581553*^9}, 
   3.811622792558648*^9, {3.811623573939743*^9, 3.8116235811745167`*^9}},
 CellLabel->
  "Out[377]=",ExpressionUUID->"200b0633-a745-456e-8562-8ae073805123"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.811623598391467*^9, 
  3.811623600026737*^9}},ExpressionUUID->"90bff22b-d0c6-4be7-92e9-\
bb060c8dc525"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"L", "=", "4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ks", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      FractionBox[
       RowBox[{"2", "*", "n", "*", "Pi"}], "L"], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", 
        RowBox[{
         RowBox[{"-", "L"}], "/", "2"}], ",", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"L", "/", "2"}], "-", "1"}], ")"}]}], "}"}]}], "]"}]}], ";", 
   RowBox[{"an", " ", "=", " ", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"Total", "[", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"k", "=", 
            RowBox[{"ks", "[", 
             RowBox[{"[", "l", "]"}], "]"}]}], ";", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"g", "\[Equal]", "J"}], " ", "&&", " ", 
              RowBox[{"k", "\[Equal]", 
               RowBox[{
                RowBox[{"-", "L"}], "/", "2"}]}]}], ",", "0", ",", 
             RowBox[{"Sqrt", "[", 
              RowBox[{
               SuperscriptBox["g", "2"], "+", 
               SuperscriptBox[
                RowBox[{"(", "J", ")"}], "2"], "+", 
               RowBox[{"(", 
                RowBox[{"2", "*", "J", "*", "g", "*", 
                 RowBox[{"Cos", "[", "k", "]"}]}], ")"}]}], "]"}]}], "]"}]}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"l", ",", "1", ",", 
            RowBox[{"Length", "[", "ks", "]"}]}], "}"}]}], "]"}], "]"}]}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"J", ",", "0", ",", "10", ",", ".01"}], "}"}]}], "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"op", "[", 
     RowBox[{"n_Integer", ",", "k_Integer", ",", 
      RowBox[{"a_", "?", "MatrixQ"}]}], "]"}], "/;", 
    RowBox[{
     RowBox[{"1", "\[LessEqual]", "k", "\[LessEqual]", "n"}], "&&", 
     RowBox[{
      RowBox[{"Dimensions", "[", "a", "]"}], "\[Equal]", 
      RowBox[{"{", 
       RowBox[{"2", ",", "2"}], "}"}]}]}]}], ":=", 
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{
     RowBox[{"IdentityMatrix", "[", 
      RowBox[{
       RowBox[{"2", "^", 
        RowBox[{"(", 
         RowBox[{"k", "-", "1"}], ")"}]}], ",", "SparseArray"}], "]"}], ",", 
     "a", ",", 
     RowBox[{"IdentityMatrix", "[", 
      RowBox[{
       RowBox[{"2", "^", 
        RowBox[{"(", 
         RowBox[{"n", "-", "k"}], ")"}]}], ",", "SparseArray"}], "]"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"sz", "[", 
     RowBox[{"n_Integer", ",", "k_Integer"}], "]"}], "/;", 
    RowBox[{"1", "\[LessEqual]", "k", "\[LessEqual]", "n"}]}], ":=", 
   RowBox[{"op", "[", 
    RowBox[{"n", ",", "k", ",", 
     RowBox[{"PauliMatrix", "[", "3", "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"sx", "[", 
     RowBox[{"n_Integer", ",", "k_Integer"}], "]"}], "/;", 
    RowBox[{"1", "\[LessEqual]", "k", "\[LessEqual]", "n"}]}], ":=", 
   RowBox[{"op", "[", 
    RowBox[{"n", ",", "k", ",", 
     RowBox[{"PauliMatrix", "[", "1", "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"HH", "[", 
    RowBox[{
     RowBox[{"n_Integer", "/;", 
      RowBox[{"n", "\[GreaterEqual]", "3"}]}], ",", "g_", ",", "J_"}], "]"}], 
   ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "g"}], "*", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{"sz", "[", 
        RowBox[{"n", ",", "k"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "n"}], "}"}]}], "]"}]}], "-", 
    RowBox[{"J", "*", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"sx", "[", 
         RowBox[{"n", ",", "k"}], "]"}], ".", 
        RowBox[{"sx", "[", 
         RowBox[{"n", ",", 
          RowBox[{"Mod", "[", 
           RowBox[{
            RowBox[{"k", "+", "1"}], ",", "n", ",", "1"}], "]"}]}], "]"}]}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "n"}], "}"}]}], "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"num", " ", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"kk", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"HH", "[", 
          RowBox[{"4", ",", "g", ",", "J"}], "]"}], "//", "Eigenvalues"}], "//",
         "Min"}]}], ";", "kk"}], ",", 
     RowBox[{"{", 
      RowBox[{"J", ",", "0", ",", "10", ",", ".01"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"an", "/", "num"}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.811623649632929*^9, 3.811623652170529*^9}, {
   3.8116236940370293`*^9, 3.811623694422846*^9}, 3.811623744372694*^9, {
   3.811623948869673*^9, 3.811623949405685*^9}},
 CellLabel->
  "In[405]:=",ExpressionUUID->"f28ab11c-a253-41d9-a3ed-62b67f1aa086"],

Cell[BoxData[
 GraphicsBox[{{}, {
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.004583333333333334], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
w/nttrr2Fh87XOmBd4pn4pyKDqt5omrjvs99nnaY5dl+ffFxnvf9DsMTAf/W
Fuff6jDbE00WLpe1rlF/TxTPnbfa/gL194Ryf/XtPSepvyea67vYPTtM/T1R
cK7RtE869fdCzrqS9Lkp1N8LixVTS70Tqb8XnAb9yDGldbYXvlXVnPyURv29
oO3yTTeWHj/dC6JVGvptJ6i/F94buLa6n6f+Xujh5/PnfB7134Kn/mmW3wup
/xb0U981UruE+m+BE6/l3qBH1H8LdnWSxfV6Qf23YPaJ1tjqSuq/BYsX6aid
qKL+W6DxIQqOtdR/C05Vvo3+TXmpeSOg9vHPcMqT5Q0LdunbKnXK3xuuGeP5
0KT8vdHn1XAtYR96/Xlj4v3c26f70+vPG60ljz+VDKbXnzfu/h6W/ZB5/Xnj
7bYeiwsN6PXng4G777dmTKDXnw9uBTv38JlK/X3w+01w1kgz6u+DiU0B3W7R
/w88H7yMDvG1W0D9fZBjvEz7sRX198FRT/+xc1dQfx98LVavT7al/r5gG5Rk
vran/r5IEc0M1tlE/X2RZbt+/3RX6u+LN+ce2lt5Un9fSDp/fWHlS/198coz
bqNZIPX3BW9/774Dw6i/Lw4/2z7lYyT190PL9VP1mTzq74fY09slNiLq7wfO
u5/jaunvFdsP4W/0e0Ypqb8fNvV87/g3ifr7gTX3gJ1XMvX3w1HJIqPivdTf
D809LLoMTqf+/lheEz3cIYv6++Ooc3z21mzq74/tdfYPzh6j/v6I/e/fZ54/
/hi03Hh8lvr7Y9W9zd9Kc6m/PzbG3gnJu0L9/eF1IE+2L5/6c/D96hpHTmGH
tTlQm2WoN72Ing8Hj2etqKm922FjDiqkbv/20PsNOFiaFM+b+ajDNhykeK3e
f+8pPV8OLOur+GtedJjDwabONWtLK+j5c1BwJNxyDr3fJXIg80BYxgeah4Po
ne4Dm+j9UcVBU0HK8oVfaD4OTEZ1mx9f2+EyDt73cx965QfNy8G7XbUaVT87
XMeBTsOm4d3o/VktAHqLmncMbab5A/B9slJqSO/nrAB04XuNMVLveL83DkBg
vbt0GL3/IwDjP1VX9OjWYZsAZE16ueAbc70QgL2vz7y52avDnACMGBb8eIcW
XT8EYE+3I5Yb+nU4MQBpEp/VugPoeiYAvVe6Dy8e2GFVAC7mlJQEDqbrmwCI
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
HgSPbmTyF0NznxO/lclfjIVPlzzuTOfNy8WQz1mk35Nc2f7zfh4OfcnV7f0e
X9s2kFwnxqGLznn65EYxnlk4vRnFnF+X4Of6O3/GkjUlMP7v+XZtCeZEGfea
TtaT4NSZFZqzySwJvD+xmueRjST4siL3w2KysQQ7OxncXE42k8CxPiLVlgwJ
0j/f3rKebCVB43Z9YyeyjQSLguRf3cj2Eoz+PDp9C5ktwdIZf5ZyyJ4SqEJ1
voWQORLoZUriI8lcCZZs8xrIZ87zS2D793paPFksQffAg8Pl5MT234cPK3kb
OUWCvFkLuiaT0yXw0NH3TSVnt/9+uuTdzSCrJNjQZerIw+RcCVI/SjnHyPkS
iDY8PX+KXCTBkKaRv86TyyRomhE7/gqTf/vz8W9aX8DkL0FleRrvFpO/BDbb
eGl3mfwlWJd85HwZk78EPiVGt54w+Uux9FfP+y+Y/KUousi+/4bJXwrPgya3
PzD5SyEy3Jlbw+QvhXj71sxaJn8pZo+YImpg8pei9Ws8u5HJXwr1xn0m/5j8
pbhuFKfeib5/YSVF2dIFt7uSbaTYofVF1JNsL4VZnwQLbTJbioobo2r7kz2l
mLrjXvIgMkcKk+LEmcPIXCmqt4c/Hcl830OKAb12eBuSxVLUGH9tGk9OlKJn
jYJvTE6R4monUSdTcnr7vCYVUcz3R7KleDEks86CrJJiJt44zifnSnFAO71w
ETlfiiEfv4+2JhdJoWx9HrOSXCbF2ASvh7bkcim2Jh0Zbk+ulKJU/6C7A7m6
/flreRxmk+ukuGf+960buVGKvXZeul7M919keNbzmqUvWVOG1JouvgFkbRku
bbHaGkLWk8HwV2JOOJklw8nnNQXRZCMZXqxxfMgnG8vgoPz1SkQ2k+H87itv
JWTI4BV6pVLB5C9DpVbb821M/jKUWCjv7WTyl2F5YdDl3Uz+MvRfc/HAPiZ/
GZKlnvEZTP4yWNRLXQ8y+cvg22ncrCNM/jI0DF/Z+ziTvwxvUjVeqJj8ZfiT
a5NxlslfhnMZc11zmfxliAx8PvwKk78Md00Mn11j8pfBqnKK5AaTvwy1GzpN
v83kLwM3PKPiDpO/DH3aBvLuM/nLULTPT/8hk78MD38fP/eEyV+GtXteWz1n
8m9//t26P3vF5C+D7QlTdiWTvwyjvvp8eM/kL0eq1gXXKiZ/OS7YDX39mclf
jq3fs2xrmfzlMG+0L/zB5C/HpFgY/2Lyl8MyzjW5kclfjhcNxU3NTP5yNKki
17Ux+cuxWcZTdaLva1nJ8duysnNXso0cwYmZa7qT7eV407c0rReZLYdok+8n
LbKnHBb/hEY6ZI4cZu767sz3wbhyxGjMSRvEfF9Mjhbj2kdDyeL2+WabdmaR
E+UYvXmw8ShyihxHK7LWGZDT5fhZ/DJiLDlbjqu4tXsCWSWHvrX32cnkXDne
fXhwZyo5X47oFrUKU3KRHGuD2j6bkcvkuKb/+OcscrkcY2+I/s4hV8oxbNiQ
lnnkajnkr/Y0WZLr5EhJ69mwmNwox/iWoOqlzPfjFNgR8eL5crKmAl92Lbxt
Q9ZWYGTBZZUtWU8BdccFu+zILAU2XH8Xtp5spMAYi/S1DmRjBeJ7CyY7kc0U
6OSp7OJChgLBIXefuTH5KzDPdu4hDyZ/BVx16jhbmPzbn++V9zN8mfwVWLKU
1ezP5K/A3WM5lwKZ/BXYVSwLDWHyV6Aq4tYkLpO/AoGJzu8jmPwVeHrfZUc0
k78Ca+tK5/GY/BXgZJ34ImDyV2BaYuckEZO/AqYrnpmImfwVqPOb8FjK5K+A
G7c7R8Hkr0DUpyDNRCZ/BfTGB+xLYvJXoPeJrpN3Mvkr4H7PPC+ZyV8Bywot
qz1M/gq0GCpLU5n8FXCuvWibxuSvQLRHyuMMJn8luhZMWp3F5K/EoOGCkkNM
/kocSU1ecITJX4kJ1sEXcpj8lWiaqm90gslfiY22yTtVTP5KBGVWtZ1m8lfC
sbeOxzkmfyVCuMPuXmDyV6LbtT4TLjH5K/H4TLXkCpO/EoWsUx+uMvkrMea2
z+wCJn8lLjuxtt1g8lfi2p6ydzeZ/JUYzhJMKWLyV2LWVvPoO0z+SqyKbb5Z
wuSvhE1sSc9SJn8l+umeWvGAyV+JudePKx8x+Ssh/3vr7hMmfyXSJ6p3LWfy
V8LpOtviBZO/EhcHfg54xeSvxCdhxoHXTP5KWK+XPaxk8lfi/quc1ndM/kok
rexm9JHJXwmHzxkrqpj82/06NrCGyV+JNWsPbv/C5L8VBQG6p78x+W/F5RXP
7n1n8t+KkWpfP/1g8t8KVZL9vwYm/63423NE399M/lsRtmXJyEYm/63IPPjE
+C+T/1ZonSie3cLkvxVzfccuamXy34rWju///h+0AC0L
      "]]}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.004583333333333334],
       AbsoluteThickness[1.6]}, {}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.004583333333333334],
       AbsoluteThickness[1.6]}, {}}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.919650617650803},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1001.}, {0.919650617650803, 1.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.811623653887488*^9, 3.811623695045113*^9, 
  3.8116237455135*^9, 3.811623951025693*^9},
 CellLabel->
  "Out[413]=",ExpressionUUID->"5686f7bd-da37-414c-ace1-140db1b075d5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"L", "=", "6"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ks", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      FractionBox[
       RowBox[{"2", "*", "n", "*", "Pi"}], "L"], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", 
        RowBox[{
         RowBox[{"-", "L"}], "/", "2"}], ",", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"L", "/", "2"}], "-", "1"}], ")"}]}], "}"}]}], "]"}]}], ";", 
   RowBox[{"an", " ", "=", " ", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"Total", "[", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"k", "=", 
            RowBox[{"ks", "[", 
             RowBox[{"[", "l", "]"}], "]"}]}], ";", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"g", "\[Equal]", "J"}], " ", "&&", " ", 
              RowBox[{"k", "\[Equal]", 
               RowBox[{
                RowBox[{"-", "L"}], "/", "2"}]}]}], ",", "0", ",", 
             RowBox[{"Sqrt", "[", 
              RowBox[{
               SuperscriptBox["g", "2"], "+", 
               SuperscriptBox[
                RowBox[{"(", "J", ")"}], "2"], "+", 
               RowBox[{"(", 
                RowBox[{"2", "*", "J", "*", "g", "*", 
                 RowBox[{"Cos", "[", "k", "]"}]}], ")"}]}], "]"}]}], "]"}]}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"l", ",", "1", ",", 
            RowBox[{"Length", "[", "ks", "]"}]}], "}"}]}], "]"}], "]"}]}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"J", ",", "0", ",", "10", ",", ".01"}], "}"}]}], "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"op", "[", 
     RowBox[{"n_Integer", ",", "k_Integer", ",", 
      RowBox[{"a_", "?", "MatrixQ"}]}], "]"}], "/;", 
    RowBox[{
     RowBox[{"1", "\[LessEqual]", "k", "\[LessEqual]", "n"}], "&&", 
     RowBox[{
      RowBox[{"Dimensions", "[", "a", "]"}], "\[Equal]", 
      RowBox[{"{", 
       RowBox[{"2", ",", "2"}], "}"}]}]}]}], ":=", 
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{
     RowBox[{"IdentityMatrix", "[", 
      RowBox[{
       RowBox[{"2", "^", 
        RowBox[{"(", 
         RowBox[{"k", "-", "1"}], ")"}]}], ",", "SparseArray"}], "]"}], ",", 
     "a", ",", 
     RowBox[{"IdentityMatrix", "[", 
      RowBox[{
       RowBox[{"2", "^", 
        RowBox[{"(", 
         RowBox[{"n", "-", "k"}], ")"}]}], ",", "SparseArray"}], "]"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"sz", "[", 
     RowBox[{"n_Integer", ",", "k_Integer"}], "]"}], "/;", 
    RowBox[{"1", "\[LessEqual]", "k", "\[LessEqual]", "n"}]}], ":=", 
   RowBox[{"op", "[", 
    RowBox[{"n", ",", "k", ",", 
     RowBox[{"PauliMatrix", "[", "3", "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"sx", "[", 
     RowBox[{"n_Integer", ",", "k_Integer"}], "]"}], "/;", 
    RowBox[{"1", "\[LessEqual]", "k", "\[LessEqual]", "n"}]}], ":=", 
   RowBox[{"op", "[", 
    RowBox[{"n", ",", "k", ",", 
     RowBox[{"PauliMatrix", "[", "1", "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"HH", "[", 
    RowBox[{
     RowBox[{"n_Integer", "/;", 
      RowBox[{"n", "\[GreaterEqual]", "3"}]}], ",", "g_", ",", "J_"}], "]"}], 
   ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "g"}], "*", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{"sz", "[", 
        RowBox[{"n", ",", "k"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "n"}], "}"}]}], "]"}]}], "-", 
    RowBox[{"J", "*", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"sx", "[", 
         RowBox[{"n", ",", "k"}], "]"}], ".", 
        RowBox[{"sx", "[", 
         RowBox[{"n", ",", 
          RowBox[{"Mod", "[", 
           RowBox[{
            RowBox[{"k", "+", "1"}], ",", "n", ",", "1"}], "]"}]}], "]"}]}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "n"}], "}"}]}], "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"num", " ", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"kk", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"HH", "[", 
          RowBox[{"L", ",", "g", ",", "J"}], "]"}], "//", "Eigenvalues"}], "//",
         "Min"}]}], ";", "kk"}], ",", 
     RowBox[{"{", 
      RowBox[{"J", ",", "0", ",", "10", ",", ".01"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"p6", "=", 
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{"an", "/", "num"}], ",", " ", 
    RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.8116239644759197`*^9, 3.811623970923629*^9}, {
  3.8116255809267*^9, 3.811625582279006*^9}},
 CellLabel->
  "In[578]:=",ExpressionUUID->"a011b9a6-1ccc-4006-b863-62b5b6936341"],

Cell[BoxData[
 GraphicsBox[{{}, {
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.004583333333333334], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
ThqsvWVpz3bTIH1nqg/bV4OPN/LEbKEG108e/oct0sDhivggW6zBKq9eRWyl
Bu8qNU/ZaRocOHG9np2ugdmEZx3584daDT4VFw1iZ2qwqUQxmZ2jwc2MTgvZ
xzSI3CYKZudr4G6ak8Qu1CB7zUktu7jB1puPsks12Kaaf41doUG/i0+esSs1
qBZMrWdXaXA/XtyhmvvXoEXWygFsnRTsMYkaz9ZNgZv9mLlsvYZx4U1ftkEK
Mp5ax7GNUmD/Vb2abZKCni32ZbLNU7Bj4e5TbKsUXLaNu8lGCo72MnvJtk1B
0eAj9WxBCg6d7arHn/90SoHjICdjtlsK2h0NsmL7psD3gPdMtjAF7b1HubFF
KVhi9Czk9+dJU3B6YEAiW5mCT9durmenpaDPgk772OkpyNe1PMvWpiBriMUt
dmYKfrZr+5KdkwJBVUEd+1gK3A0Wt/nE/adg7ZWbvdiFKZDNGTCMXZyCvq9d
JrNLU/DhYcB8dkUK1vu5+bArU7CixCKSXZWC+oXPVezaFNjZiDaydVJx8crr
bLZuKuwtcYatl4pRp8KK2QapMNue/JhtlAqPfvJqtkkqQiSuTfjzu+apWPap
uz7bKhVlx48bs5GKPXrjLNm2qQj69fnf/wGqOAAA
      "]]}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.004583333333333334],
       AbsoluteThickness[1.6]}, {}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.004583333333333334],
       AbsoluteThickness[1.6]}, {}}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.964032816638459},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1001.}, {0.964032816638459, 1.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.811623965829525*^9, 3.8116239823619537`*^9}, 
   3.811625583585781*^9},
 CellLabel->
  "Out[586]=",ExpressionUUID->"c2ac8286-a7ca-42be-9f49-f62002a294f9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"L", "=", "8"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ks", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      FractionBox[
       RowBox[{"2", "*", "n", "*", "Pi"}], "L"], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", 
        RowBox[{
         RowBox[{"-", "L"}], "/", "2"}], ",", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"L", "/", "2"}], "-", "1"}], ")"}]}], "}"}]}], "]"}]}], ";", 
   RowBox[{"an", " ", "=", " ", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"Total", "[", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"k", "=", 
            RowBox[{"ks", "[", 
             RowBox[{"[", "l", "]"}], "]"}]}], ";", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"g", "\[Equal]", "J"}], " ", "&&", " ", 
              RowBox[{"k", "\[Equal]", 
               RowBox[{
                RowBox[{"-", "L"}], "/", "2"}]}]}], ",", "0", ",", 
             RowBox[{"Sqrt", "[", 
              RowBox[{
               SuperscriptBox["g", "2"], "+", 
               SuperscriptBox[
                RowBox[{"(", "J", ")"}], "2"], "+", 
               RowBox[{"(", 
                RowBox[{"2", "*", "J", "*", "g", "*", 
                 RowBox[{"Cos", "[", "k", "]"}]}], ")"}]}], "]"}]}], "]"}]}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"l", ",", "1", ",", 
            RowBox[{"Length", "[", "ks", "]"}]}], "}"}]}], "]"}], "]"}]}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"J", ",", "0", ",", "10", ",", ".01"}], "}"}]}], "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"op", "[", 
     RowBox[{"n_Integer", ",", "k_Integer", ",", 
      RowBox[{"a_", "?", "MatrixQ"}]}], "]"}], "/;", 
    RowBox[{
     RowBox[{"1", "\[LessEqual]", "k", "\[LessEqual]", "n"}], "&&", 
     RowBox[{
      RowBox[{"Dimensions", "[", "a", "]"}], "\[Equal]", 
      RowBox[{"{", 
       RowBox[{"2", ",", "2"}], "}"}]}]}]}], ":=", 
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{
     RowBox[{"IdentityMatrix", "[", 
      RowBox[{
       RowBox[{"2", "^", 
        RowBox[{"(", 
         RowBox[{"k", "-", "1"}], ")"}]}], ",", "SparseArray"}], "]"}], ",", 
     "a", ",", 
     RowBox[{"IdentityMatrix", "[", 
      RowBox[{
       RowBox[{"2", "^", 
        RowBox[{"(", 
         RowBox[{"n", "-", "k"}], ")"}]}], ",", "SparseArray"}], "]"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"sz", "[", 
     RowBox[{"n_Integer", ",", "k_Integer"}], "]"}], "/;", 
    RowBox[{"1", "\[LessEqual]", "k", "\[LessEqual]", "n"}]}], ":=", 
   RowBox[{"op", "[", 
    RowBox[{"n", ",", "k", ",", 
     RowBox[{"PauliMatrix", "[", "3", "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"sx", "[", 
     RowBox[{"n_Integer", ",", "k_Integer"}], "]"}], "/;", 
    RowBox[{"1", "\[LessEqual]", "k", "\[LessEqual]", "n"}]}], ":=", 
   RowBox[{"op", "[", 
    RowBox[{"n", ",", "k", ",", 
     RowBox[{"PauliMatrix", "[", "1", "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"HH", "[", 
    RowBox[{
     RowBox[{"n_Integer", "/;", 
      RowBox[{"n", "\[GreaterEqual]", "3"}]}], ",", "g_", ",", "J_"}], "]"}], 
   ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "g"}], "*", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{"sz", "[", 
        RowBox[{"n", ",", "k"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "n"}], "}"}]}], "]"}]}], "-", 
    RowBox[{"J", "*", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"sx", "[", 
         RowBox[{"n", ",", "k"}], "]"}], ".", 
        RowBox[{"sx", "[", 
         RowBox[{"n", ",", 
          RowBox[{"Mod", "[", 
           RowBox[{
            RowBox[{"k", "+", "1"}], ",", "n", ",", "1"}], "]"}]}], "]"}]}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "n"}], "}"}]}], "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"num", " ", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"kk", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"HH", "[", 
          RowBox[{"L", ",", "g", ",", "J"}], "]"}], "//", "Eigenvalues"}], "//",
         "Min"}]}], ";", "kk"}], ",", 
     RowBox[{"{", 
      RowBox[{"J", ",", "0", ",", "10", ",", ".01"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"p8", "=", 
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{"an", "/", "num"}], ",", " ", 
    RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.811623995516905*^9, 3.811624021585923*^9}, {
  3.811625598539785*^9, 3.811625599729721*^9}},
 CellLabel->
  "In[587]:=",ExpressionUUID->"28b40229-07b5-4051-9418-089a9d3447cd"],

Cell[BoxData[
 GraphicsBox[{{}, {
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.004583333333333334], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxV23dUU9n3NnBUVOw4NuyMFawoKugoPmPFhiAi2ClSpYTeIYWQhBRQLNgw
KipiAWyDjgU7VkBQUSzYsaCxIaLCy2+9c/bh6z+uzzrZ7Ow8kHtz78mfrgEL
3Jvq6em9aaan93////9/usn/+78eWvyPDVBX/3//Pv5nQzT5n/XO+Po/60Y4
+j/uhRt1jW2Mzz8bux/afW3sAfjjaWMPwtC8xjZBZ4/GHoJJ1+saeRhkx383
8gjMfvSzkc0w93ZNI4/C0x9fGnk0PKLfN7I5Jo582shjkKcoauSx+FuU18jj
YBK4oZEtcPabRyNbQn1xYCOPx57Ym3XcE7AkzLGR/0JtzL+/uSei6/qPv7gn
ISnr9U9uK9hNXF/LPRlrfr+q4QYW+BZUk4XA02V/fuXrf8Mu6o6Or/+NGScv
vOfrU7DkwqXXfH0KVs/MfsrXp2L2vHkP+PpUlPu6F/P1aZj08+hlvj4NZoN0
J/j6dJjU5Wfx9ekI97+cxtdnoFX/VAlfn4E3Sw748PWZCNojn8fXZyIgRTOU
r1sjd3Qnfb5uDf2jTnfraH0WLLJVO8jCWQiQXF7F12fjm7J5X74+G60mjyz8
TetzkDC2XQhZOAcpXea05etzoXIP2fCL1ufCZ9pnQ7LePHTSbxX1k9bnodf+
O4W1tG6DzU5zDMnCBqvMxv+g9fn4Y0Ev6xpan4+BNsETvtO6LaTZq9pVM8MW
Hk1fn/5Kj7fFmxdHrb8w59tCuX1W1ieqt0PktkePP1K9HYZedX1WRfV2kFwV
5ryjejvk9Vsz7Q3VL0B3yy2bXlH9AuwbZZv1nOoXYPXFFoEVVL8Adx8ff/2Q
6u0RbPGt5X2qt8eI8x+ulVK9PRa3WmVaRPX2aO6X0fM61S/EGWvFpktUvxB7
mwRuPkv1C2H2a3yXE1S/EJkxk/QOU70D2gTOtsuiegcsNdX+3kH1Djj7s/JH
GtU7wPr+mAnJVL8I/W9/yU2g+kVQa3T2kVS/CFUnZ//hR/WLcNQn8PFKqndE
x7De++yo3hEWRXNcp1C9I+4+svgxiuod0fu6wzJjqndC8Yu5ke2o3gnmNZ8m
/qhj9U6Ydurv1OfM+U4Yar3U8waz3mIYpEXtOsKMxRhs+sVsE9UvxpKsITUx
VL8YC6+nVqyg+iWwMt1XZEX1S2DtWnmwF9UvwVu7m8tqfrP6JciJvJlfzKy3
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
/d//BwX0xhQ=
      "]]}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.004583333333333334],
       AbsoluteThickness[1.6]}, {}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.004583333333333334],
       AbsoluteThickness[1.6]}, {}}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.9797177959811854},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1001.}, {0.9797177959811854, 1.0000000000000013`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.811624013287957*^9, 3.811624026215042*^9}, 
   3.81162560430483*^9},
 CellLabel->
  "Out[595]=",ExpressionUUID->"2f8bfd6d-04e1-491c-8ff8-b40484fe5312"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"{", 
   RowBox[{"p4", ",", "p6", ",", "p8"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.811625607798724*^9, 3.8116256683521767`*^9}, {
  3.811625733514638*^9, 3.8116257856143436`*^9}},
 CellLabel->"",ExpressionUUID->"808dffa6-0446-41da-a289-e62c9c21c8a5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
    "*", "This", " ", "effect", " ", "is", " ", "due", " ", "to", " ", "the", 
     " ", "omission", " ", "of", " ", "the", " ", "correlator", " ", "term"}],
     "..."}], " ", "see"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"https", ":"}], "//", 
   RowBox[{
    RowBox[{"scihub", ".", "wikicn", ".", "top"}], "/", 
    RowBox[{"https", ":"}]}]}], "//", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"www", ".", "sciencedirect", ".", "com"}], "/", "science"}], 
      "/", "article"}], "/", "abs"}], "/", "pii"}], "/", 
   "0003491670902708"}]}]}], "Input",
 CellChangeTimes->{{3.811624151375066*^9, 
  3.8116241742945957`*^9}},ExpressionUUID->"21d81e0d-5184-4c83-8b49-\
21513ea2e656"],

Cell["Let\[CloseCurlyQuote]s follow the tutorial..", "Item",
 CellChangeTimes->{{3.811624351102346*^9, 
  3.81162435585651*^9}},ExpressionUUID->"dbca663f-9722-45a5-96b5-\
2dd0c37e6ffe"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"h", ",", "J", ",", "k"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"M", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"2", "*", 
        RowBox[{"(", 
         RowBox[{"h", "-", 
          RowBox[{"J", "*", 
           RowBox[{"Cos", "[", "k", "]"}]}]}], ")"}]}], ",", " ", 
       RowBox[{
        RowBox[{"-", "2"}], "*", "J", "*", "\[ImaginaryI]", "*", 
        RowBox[{"Sin", "[", "k", "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"2", "*", "J", "*", "\[ImaginaryI]", "*", 
        RowBox[{"Sin", "[", "k", "]"}]}], ",", " ", 
       RowBox[{
        RowBox[{"-", "2"}], "*", 
        RowBox[{"(", 
         RowBox[{"h", "-", 
          RowBox[{"J", "*", 
           RowBox[{"Cos", "[", "k", "]"}]}]}], ")"}]}]}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Eigenvalues", "[", "M", "]"}]}], "Input",
 CellChangeTimes->{{3.811624370062812*^9, 3.811624463275867*^9}},
 CellLabel->
  "In[458]:=",ExpressionUUID->"d227d5ed-bf3c-4434-8502-1cdff189c66f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "2"}], " ", 
    SqrtBox[
     RowBox[{
      SuperscriptBox["h", "2"], "+", 
      SuperscriptBox["J", "2"], "-", 
      RowBox[{"2", " ", "h", " ", "J", " ", 
       RowBox[{"Cos", "[", "k", "]"}]}]}]]}], ",", 
   RowBox[{"2", " ", 
    SqrtBox[
     RowBox[{
      SuperscriptBox["h", "2"], "+", 
      SuperscriptBox["J", "2"], "-", 
      RowBox[{"2", " ", "h", " ", "J", " ", 
       RowBox[{"Cos", "[", "k", "]"}]}]}]]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.811624443114183*^9, 3.8116244656623917`*^9}},
 CellLabel->
  "Out[460]=",ExpressionUUID->"c2d321c0-448a-413b-b0b4-40c3d32471ad"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"L", "=", "4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ks", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      FractionBox[
       RowBox[{"2", "*", "n", "*", "Pi"}], "L"], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "1", ",", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"L", "/", "2"}], "-", "1"}], ")"}]}], "}"}]}], "]"}]}], ";", 
   RowBox[{"an", " ", "=", " ", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"Total", "[", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"k", "=", 
            RowBox[{"ks", "[", 
             RowBox[{"[", "l", "]"}], "]"}]}], ";", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"g", "\[Equal]", "J"}], " ", "&&", " ", 
              RowBox[{"k", "\[Equal]", 
               RowBox[{
                RowBox[{"-", "L"}], "/", "2"}]}]}], ",", "0", ",", 
             RowBox[{"4", "*", 
              RowBox[{"Sqrt", "[", 
               RowBox[{
                SuperscriptBox["g", "2"], "+", 
                SuperscriptBox[
                 RowBox[{"(", "J", ")"}], "2"], "-", 
                RowBox[{"(", 
                 RowBox[{"2", "*", "J", "*", "g", "*", 
                  RowBox[{"Cos", "[", "k", "]"}]}], ")"}]}], "]"}]}]}], 
            "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"l", ",", "1", ",", 
            RowBox[{"Length", "[", "ks", "]"}]}], "}"}]}], "]"}], "]"}]}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"J", ",", "0", ",", "10", ",", ".01"}], "}"}]}], "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"op", "[", 
     RowBox[{"n_Integer", ",", "k_Integer", ",", 
      RowBox[{"a_", "?", "MatrixQ"}]}], "]"}], "/;", 
    RowBox[{
     RowBox[{"1", "\[LessEqual]", "k", "\[LessEqual]", "n"}], "&&", 
     RowBox[{
      RowBox[{"Dimensions", "[", "a", "]"}], "\[Equal]", 
      RowBox[{"{", 
       RowBox[{"2", ",", "2"}], "}"}]}]}]}], ":=", 
   RowBox[{"KroneckerProduct", "[", 
    RowBox[{
     RowBox[{"IdentityMatrix", "[", 
      RowBox[{
       RowBox[{"2", "^", 
        RowBox[{"(", 
         RowBox[{"k", "-", "1"}], ")"}]}], ",", "SparseArray"}], "]"}], ",", 
     "a", ",", 
     RowBox[{"IdentityMatrix", "[", 
      RowBox[{
       RowBox[{"2", "^", 
        RowBox[{"(", 
         RowBox[{"n", "-", "k"}], ")"}]}], ",", "SparseArray"}], "]"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"sz", "[", 
     RowBox[{"n_Integer", ",", "k_Integer"}], "]"}], "/;", 
    RowBox[{"1", "\[LessEqual]", "k", "\[LessEqual]", "n"}]}], ":=", 
   RowBox[{"op", "[", 
    RowBox[{"n", ",", "k", ",", 
     RowBox[{"PauliMatrix", "[", "3", "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"sx", "[", 
     RowBox[{"n_Integer", ",", "k_Integer"}], "]"}], "/;", 
    RowBox[{"1", "\[LessEqual]", "k", "\[LessEqual]", "n"}]}], ":=", 
   RowBox[{"op", "[", 
    RowBox[{"n", ",", "k", ",", 
     RowBox[{"PauliMatrix", "[", "1", "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"HH", "[", 
    RowBox[{
     RowBox[{"n_Integer", "/;", 
      RowBox[{"n", "\[GreaterEqual]", "3"}]}], ",", "g_", ",", "J_"}], "]"}], 
   ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "g"}], "*", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{"sz", "[", 
        RowBox[{"n", ",", "k"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "n"}], "}"}]}], "]"}]}], "-", 
    RowBox[{"J", "*", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"sx", "[", 
         RowBox[{"n", ",", "k"}], "]"}], ".", 
        RowBox[{"sx", "[", 
         RowBox[{"n", ",", 
          RowBox[{"Mod", "[", 
           RowBox[{
            RowBox[{"k", "+", "1"}], ",", "n", ",", "1"}], "]"}]}], "]"}]}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "n"}], "}"}]}], "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"num", " ", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"kk", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"HH", "[", 
          RowBox[{"L", ",", "g", ",", "J"}], "]"}], "//", "Eigenvalues"}], "//",
         "Min"}]}], ";", "kk"}], ",", 
     RowBox[{"{", 
      RowBox[{"J", ",", "0", ",", "10", ",", ".01"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"an", "/", "num"}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.811624601670745*^9, 3.81162467360555*^9}, {
  3.811624709466411*^9, 3.8116247487847548`*^9}, {3.8116248378785763`*^9, 
  3.8116248443830357`*^9}, {3.811624909228001*^9, 
  3.811624910140695*^9}},ExpressionUUID->"138c0930-a81f-41f8-aeab-\
719aad9ebe53"],

Cell[BoxData[
 GraphicsBox[{{}, {
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.004583333333333334], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxV23c81f8bP35FJS0VpX1IaIho0PJoKCVRKGkdGiTj2JvD4TiHcyQtqXTa
pXq/taTlrU1Tm4akpYW0tH9+t6+H7+fbP93ut6frXD3Oldd+6XsGzF7WUk1N
7Y26mtr///f/+VNn8//+rYbA3QeUrZutiRV79Ef2bLY2+lof+Da62TpY/yz8
pnez9ZBRkH5iR7N7w+58ed67ZgtQ4aP/L1rQBrjSvuPB7c02ROwuk+2dW9JG
CFz3KEnZbBMYi4Ond1OnByHHVvB6f7OHYJvuV4eZGvRQRG+pEf1utjlcHd/i
RCt6GOZcOHQwoTVtgQ+jvu2a04a2xJU+bt2tNOnhcL+1qGZAW3oEXBcndRNo
0SPRYYVFlFE7ehTW6l9sad2etkLRUmXW3A60NbJf3zZI7EiPRmbi/ZSCTvQY
SNbdPfBDmx6LoqQ2YXZd6HH46Jh7aVtXejycJv4Ut9albdD+9HhpWDca0NI9
l/+xe5PFQHFWxcfwHlyfAK9Nv3Tb9uL6BPy7Z73art5cn4hPF8em2/fl+kT8
fbQh+1c/rk9CxgA/tQJ9rk+C8uK2jbH9uT4ZnwLG2zgM4PpkvB4cXGJkzHVb
+A3d1ElrINdtYX0d1V8HcX0K1sn1B34YwvUpmGtpsef9UK5PRW7/HSO/mHN9
KmJWvchtbcl1O6R9zL0vGMF1O1SlfUqbNIrr0zBXre1mf2uuT4ObmuzBtjFc
n46wrks7PhnH9emQh7zvJADX7eHc6lauz0Su28Pezfjg6clcnwG/0oAXulO5
PgPH72f3CZvGdQdoDeg44Ik91x3gYJR7afpMrs+E7sqb1wuduD4TbpZLW1k7
c90Re9o9HHXCleuOyI6zNLNx47oTUsrbHrvi3mQ4wUBjTeb8hfx5J5zx2ZPx
cXGTi5zg8eNyuMKT9bPwcaih9pBlrJ+F6mEq/VIv1s9CfttHwRE+rJ+F+eXD
bxj6sX42Pgy99+1uAOtnw9Tj0HFZEOtno+JH5l2bUNbPRoFlX90f4ax3xq7Q
MpvjUax3hlHN0F7hsax3hnxQrJ+1mPXOCCns+vt3IutdkP1pfMaFZNa74E+C
wweFjPUu2Oy44eGcNNa7YNPIpL4G6ax3xdXSzPiaDNa74r+piy+cWsN6V3Qw
yT0iX896V1weuVjHbSPr56Bh6uaDRptZPwcXdAqmfMlh/Rws0J625/w21s9B
jfWQDat3sn4ujr5Nq1i0h/VzsT7nle3gXNbPxcdjuuu/HmD9XISbuWQV/ct6
N7R0s+0mP8x6N5QG/Cx3PMZ6N5RM/HNQp4D1btA8Mmvhg5Osn4cgy5gjG86w
fh6Uw5QxrkWsnwcd3/7J2udZPw9PRwRnF19kvTtsts9IjS1mvTtmZev3N7vK
enf8Kms3/Ml11rtj5LXbipRS1s9HS/ePv03vsH4+/FM2uZXeY/18aKld8Pcv
Y/18TIvR76r5iPULYNxqeI8tT1i/AHFdp7uaVrJ+AUrkyZsLqli/AF7Sygvj
X7J+Iaw6WOz67zXrF8I4xUJ3zFvWL8QbXfGHvPesX4i/J7e30a9l/SJInLTH
p31k/SJYzjb3rf3E+kUYFLbY3+Er6xchtesn/V0NrF+MUXPGLvv6g/WL8Wp8
WvcJv1m/GHV+w3ok/2X9YpwuSLI/1+JjU70QQtmzjAb1JguEELQ4eM24dZMh
RO3HOc8dNZssFEKcNv+kSKvJYiE8KiZbpbZvskqIwn4HJm/u2OQiIdYcHV28
W7vJlUI8brn/wL4u7O+Btm1LHu/UYX8POJ8KmpzVjf090Mk4q1Six/4eiF4w
JsCrJ/t74GdfUadJvdnfAzoL5m/r1pf9PXBuhUW3qn7s74ET7UcLd+mzvyf6
Tr0YJOzP/p5wrLOc2HUA+3vicLeP588Ysb8nsoYE1iw2YX9PnFAzP/F9IPt7
4rTkn95pg9nfE5XzRV10TNnfEzenfl+7dij7L0HL2Ve2tjdn/yUYeX+RWcww
9l8CTfeBE55bsP8SpI7OuDNhOPsvgZX525cbRrD/EuTnRkW8HMn+S5DR2l8x
yIr9l6Bsy73+XtbsvxRW+TsmbBrN/kuxymHPm0tj2H8p3C+nCN6OZf+l2BhT
9E5jPPsvxROzzbO627D/UuR7mc/TB/s3fv4hN63+E9h/KcZdO+TXeyL7L8Pr
82sVHSax/zIc+tw58CuNZRjR8v2AB5PZfxn2FGbm/2vL/suws1VfM/EU9l+G
BQq7zXZT2X8Zvuz1adfWjv2X4XmX0NSztNpy1Gx5Zxw0jf2Xo+zj0/qe09l/
Oazx/scpWrgcS36YOrnas/9yxMug/ppWLYdEw2pA4Az2Xw7D75suf6Irl2OD
secvfwf290Khy5t7VbTAC4H9Pi93nMn+Xsh8tuPcUVrohZDNwb+6OLK/F+Lr
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
      "]]}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.004583333333333334],
       AbsoluteThickness[1.6]}, {}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.004583333333333334],
       AbsoluteThickness[1.6]}, {}}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.9954226555393116},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1001.}, {0.9954226555393116, 1.0823922002923942`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8116246674955187`*^9, 3.811624674628502*^9}, {
  3.81162471121369*^9, 3.8116247495541983`*^9}, {3.8116248399007483`*^9, 
  3.811624845302217*^9}},
 CellLabel->
  "Out[559]=",ExpressionUUID->"ddabbaf3-c11f-45b2-97f4-a8927c48a379"]
}, Open  ]]
},
WindowSize->{1440., 768.75},
WindowMargins->{{0, Automatic}, {0, Automatic}},
FrontEndVersion->"12.1 for Linux x86 (64-bit) (March 18, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"8dc8de42-91da-4eb0-9e31-587fccc1d581"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 5555, 156, 255, "Input",ExpressionUUID->"cd3ecb8c-34e8-4682-8f60-310d34862c01"],
Cell[6138, 180, 13838, 243, 233, "Output",ExpressionUUID->"86287e5d-1b97-4947-88ec-d561ef7c6027"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20013, 428, 2017, 59, 134, "Input",ExpressionUUID->"67a560c8-d666-4a06-b979-47c98d497a40"],
Cell[22033, 489, 333, 6, 33, "Output",ExpressionUUID->"19f25807-da7e-4a70-adb4-0a27b10ea89c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[22403, 500, 384, 10, 29, "Input",ExpressionUUID->"e3d60997-637b-4ec6-9cb6-6c3a1917d6a5"],
Cell[22790, 512, 310, 6, 33, "Output",ExpressionUUID->"200b0633-a745-456e-8562-8ae073805123"]
}, Open  ]],
Cell[23115, 521, 152, 3, 29, "Input",ExpressionUUID->"90bff22b-d0c6-4be7-92e9-bb060c8dc525"],
Cell[CellGroupData[{
Cell[23292, 528, 5035, 152, 279, "Input",ExpressionUUID->"f28ab11c-a253-41d9-a3ed-62b67f1aa086"],
Cell[28330, 682, 13780, 242, 233, "Output",ExpressionUUID->"5686f7bd-da37-414c-ace1-140db1b075d5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[42147, 929, 4987, 152, 279, "Input",ExpressionUUID->"a011b9a6-1ccc-4006-b863-62b5b6936341"],
Cell[47137, 1083, 13212, 233, 230, "Output",ExpressionUUID->"c2ac8286-a7ca-42be-9f49-f62002a294f9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[60386, 1321, 4987, 152, 279, "Input",ExpressionUUID->"28b40229-07b5-4051-9418-089a9d3447cd"],
Cell[65376, 1475, 12773, 226, 230, "Output",ExpressionUUID->"2f8bfd6d-04e1-491c-8ff8-b40484fe5312"]
}, Open  ]],
Cell[78164, 1704, 307, 6, 29, "Input",ExpressionUUID->"808dffa6-0446-41da-a289-e62c9c21c8a5"],
Cell[78474, 1712, 806, 24, 52, "Input",ExpressionUUID->"21d81e0d-5184-4c83-8b49-21513ea2e656"],
Cell[79283, 1738, 185, 3, 32, "Item",ExpressionUUID->"dbca663f-9722-45a5-96b5-2dd0c37e6ffe"],
Cell[CellGroupData[{
Cell[79493, 1745, 1121, 32, 71, "Input",ExpressionUUID->"d227d5ed-bf3c-4434-8502-1cdff189c66f"],
Cell[80617, 1779, 668, 20, 40, "Output",ExpressionUUID->"c2d321c0-448a-413b-b0b4-40c3d32471ad"]
}, Open  ]],
Cell[CellGroupData[{
Cell[81322, 1804, 5027, 151, 279, "Input",ExpressionUUID->"138c0930-a81f-41f8-aeab-719aad9ebe53"],
Cell[86352, 1957, 13867, 243, 233, "Output",ExpressionUUID->"ddabbaf3-c11f-45b2-97f4-a8927c48a379"]
}, Open  ]]
}
]
*)

